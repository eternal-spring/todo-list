{"ast":null,"code":"import axios from \"axios\";\nconst SERVER_URL = 'http://localhost:3000/tasks';\n\n// Основная функция для получения всех задач.\n// Она принимает строку запроса и адрес сервера\nexport const getTodos = async function (query) {\n  let endpoint = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SERVER_URL;\n  try {\n    // Определяем наличие строки запроса\n    query ? query = `?${query}` : query = '';\n    return await fetch(SERVER_URL).then(response => {\n      return response.json();\n    }).then(data => {\n      console.log(data);\n    }).then(json => {\n      return json;\n    });\n    if (!response.ok) throw new Error(response.statusText);\n    const json = await response.json();\n    console.log(json);\n    return json;\n  } catch (err) {\n    console.error(err.message || err);\n  }\n};\nexport async function postTodo(task) {\n  try {\n    const response = await axios.post(\"/tasks\", task);\n    return response.data;\n  } catch (error) {\n    return error.message;\n  }\n}\nexport async function deleteTodo(id) {\n  try {\n    const response = await axios.delete(`/tasks/${id}`);\n    return response.data;\n  } catch (error) {\n    return error.message;\n  }\n}\nexport async function updateTodo(task) {\n  try {\n    const response = await axios.put(`/tasks/${task.id}`, task);\n    return response.data;\n  } catch (error) {\n    return error.message;\n  }\n}","map":{"version":3,"names":["axios","SERVER_URL","getTodos","query","endpoint","arguments","length","undefined","fetch","then","response","json","data","console","log","ok","Error","statusText","err","error","message","postTodo","task","post","deleteTodo","id","delete","updateTodo","put"],"sources":["C:/Users/User/ReactProjects/todo-list/src/Services/index.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst SERVER_URL = 'http://localhost:3000/tasks'\r\n\r\n// Основная функция для получения всех задач.\r\n// Она принимает строку запроса и адрес сервера\r\nexport const getTodos = async (query, endpoint = SERVER_URL) => {\r\n  try {\r\n    // Определяем наличие строки запроса\r\n    query ? (query = `?${query}`) : (query = '')\r\n\r\n    return await fetch(SERVER_URL).then((response) => {return response.json()}).then((data) => {\r\n        console.log(data);\r\n      }).then((json) => {return json});\r\n\r\n    if (!response.ok) throw new Error(response.statusText)\r\n\r\n    const json = await response.json()\r\n    console.log(json)\r\n    return json\r\n  } catch (err) {\r\n    console.error(err.message || err)\r\n  }\r\n}\r\n\r\nexport async function postTodo(task) {\r\n  try {\r\n        const response = await axios\r\n            .post(\"/tasks\", task);\r\n        return response.data;\r\n    } catch (error) {\r\n        return error.message;\r\n    }\r\n}\r\n\r\nexport async function deleteTodo(id) {\r\n  try {\r\n        const response = await axios\r\n            .delete(`/tasks/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        return error.message;\r\n    }\r\n}\r\n\r\nexport async function updateTodo(task) {\r\n  try {\r\n        const response = await axios\r\n            .put(`/tasks/${task.id}`, task);\r\n        return response.data;\r\n    } catch (error) {\r\n        return error.message;\r\n    }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,UAAU,GAAG,6BAA6B;;AAEhD;AACA;AACA,OAAO,MAAMC,QAAQ,GAAG,eAAAA,CAAOC,KAAK,EAA4B;EAAA,IAA1BC,QAAQ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,UAAU;EACzD,IAAI;IACF;IACAE,KAAK,GAAIA,KAAK,GAAI,IAAGA,KAAM,EAAC,GAAKA,KAAK,GAAG,EAAG;IAE5C,OAAO,MAAMK,KAAK,CAACP,UAAU,CAAC,CAACQ,IAAI,CAAEC,QAAQ,IAAK;MAAC,OAAOA,QAAQ,CAACC,IAAI,EAAE;IAAA,CAAC,CAAC,CAACF,IAAI,CAAEG,IAAI,IAAK;MACvFC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACnB,CAAC,CAAC,CAACH,IAAI,CAAEE,IAAI,IAAK;MAAC,OAAOA,IAAI;IAAA,CAAC,CAAC;IAElC,IAAI,CAACD,QAAQ,CAACK,EAAE,EAAE,MAAM,IAAIC,KAAK,CAACN,QAAQ,CAACO,UAAU,CAAC;IAEtD,MAAMN,IAAI,GAAG,MAAMD,QAAQ,CAACC,IAAI,EAAE;IAClCE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACjB,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOO,GAAG,EAAE;IACZL,OAAO,CAACM,KAAK,CAACD,GAAG,CAACE,OAAO,IAAIF,GAAG,CAAC;EACnC;AACF,CAAC;AAED,OAAO,eAAeG,QAAQA,CAACC,IAAI,EAAE;EACnC,IAAI;IACE,MAAMZ,QAAQ,GAAG,MAAMV,KAAK,CACvBuB,IAAI,CAAC,QAAQ,EAAED,IAAI,CAAC;IACzB,OAAOZ,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOO,KAAK,EAAE;IACZ,OAAOA,KAAK,CAACC,OAAO;EACxB;AACJ;AAEA,OAAO,eAAeI,UAAUA,CAACC,EAAE,EAAE;EACnC,IAAI;IACE,MAAMf,QAAQ,GAAG,MAAMV,KAAK,CACvB0B,MAAM,CAAE,UAASD,EAAG,EAAC,CAAC;IAC3B,OAAOf,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOO,KAAK,EAAE;IACZ,OAAOA,KAAK,CAACC,OAAO;EACxB;AACJ;AAEA,OAAO,eAAeO,UAAUA,CAACL,IAAI,EAAE;EACrC,IAAI;IACE,MAAMZ,QAAQ,GAAG,MAAMV,KAAK,CACvB4B,GAAG,CAAE,UAASN,IAAI,CAACG,EAAG,EAAC,EAAEH,IAAI,CAAC;IACnC,OAAOZ,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOO,KAAK,EAAE;IACZ,OAAOA,KAAK,CAACC,OAAO;EACxB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}