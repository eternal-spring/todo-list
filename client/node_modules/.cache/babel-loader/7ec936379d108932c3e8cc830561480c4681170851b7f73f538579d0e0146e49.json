{"ast":null,"code":"import axios from \"axios\";\nconst SERVER_URL = 'http://localhost:3000/tasks';\n\n// Основная функция для получения всех задач.\n// Она принимает строку запроса и адрес сервера\nexport const getTodos = async () => {\n  try {\n    // Определяем наличие строки запроса\n    let response = await fetch(SERVER_URL);\n    if (!response.ok) throw new Error(response.statusText);\n    const json = await response.json();\n    console.log(json);\n    return json;\n  } catch (err) {\n    console.error(err.message || err);\n  }\n};\nexport async function postTodo(task) {\n  try {\n    const response = await axios.post(\"/tasks\", task);\n    return response.data;\n  } catch (error) {\n    return error.message;\n  }\n}\nexport async function deleteTodo(id) {\n  try {\n    const response = await axios.delete(`/tasks/${id}`);\n    return response.data;\n  } catch (error) {\n    return error.message;\n  }\n}\nexport async function updateTodo(task) {\n  try {\n    const response = await axios.put(`/tasks/${task.id}`, task);\n    return response.data;\n  } catch (error) {\n    return error.message;\n  }\n}","map":{"version":3,"names":["axios","SERVER_URL","getTodos","response","fetch","ok","Error","statusText","json","console","log","err","error","message","postTodo","task","post","data","deleteTodo","id","delete","updateTodo","put"],"sources":["C:/Users/User/ReactProjects/todo-list/src/Services/index.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst SERVER_URL = 'http://localhost:3000/tasks'\r\n\r\n// Основная функция для получения всех задач.\r\n// Она принимает строку запроса и адрес сервера\r\nexport const getTodos = async () => {\r\n  try {\r\n    // Определяем наличие строки запроса\r\n    let response = await fetch(SERVER_URL);\r\n\r\n    if (!response.ok) throw new Error(response.statusText)\r\n\r\n    const json = await response.json()\r\n    console.log(json)\r\n    return json\r\n  } catch (err) {\r\n    console.error(err.message || err)\r\n  }\r\n}\r\n\r\nexport async function postTodo(task) {\r\n  try {\r\n        const response = await axios\r\n            .post(\"/tasks\", task);\r\n        return response.data;\r\n    } catch (error) {\r\n        return error.message;\r\n    }\r\n}\r\n\r\nexport async function deleteTodo(id) {\r\n  try {\r\n        const response = await axios\r\n            .delete(`/tasks/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        return error.message;\r\n    }\r\n}\r\n\r\nexport async function updateTodo(task) {\r\n  try {\r\n        const response = await axios\r\n            .put(`/tasks/${task.id}`, task);\r\n        return response.data;\r\n    } catch (error) {\r\n        return error.message;\r\n    }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,UAAU,GAAG,6BAA6B;;AAEhD;AACA;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC,IAAI;IACF;IACA,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACH,UAAU,CAAC;IAEtC,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAACH,QAAQ,CAACI,UAAU,CAAC;IAEtD,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACK,IAAI,EAAE;IAClCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOG,GAAG,EAAE;IACZF,OAAO,CAACG,KAAK,CAACD,GAAG,CAACE,OAAO,IAAIF,GAAG,CAAC;EACnC;AACF,CAAC;AAED,OAAO,eAAeG,QAAQA,CAACC,IAAI,EAAE;EACnC,IAAI;IACE,MAAMZ,QAAQ,GAAG,MAAMH,KAAK,CACvBgB,IAAI,CAAC,QAAQ,EAAED,IAAI,CAAC;IACzB,OAAOZ,QAAQ,CAACc,IAAI;EACxB,CAAC,CAAC,OAAOL,KAAK,EAAE;IACZ,OAAOA,KAAK,CAACC,OAAO;EACxB;AACJ;AAEA,OAAO,eAAeK,UAAUA,CAACC,EAAE,EAAE;EACnC,IAAI;IACE,MAAMhB,QAAQ,GAAG,MAAMH,KAAK,CACvBoB,MAAM,CAAE,UAASD,EAAG,EAAC,CAAC;IAC3B,OAAOhB,QAAQ,CAACc,IAAI;EACxB,CAAC,CAAC,OAAOL,KAAK,EAAE;IACZ,OAAOA,KAAK,CAACC,OAAO;EACxB;AACJ;AAEA,OAAO,eAAeQ,UAAUA,CAACN,IAAI,EAAE;EACrC,IAAI;IACE,MAAMZ,QAAQ,GAAG,MAAMH,KAAK,CACvBsB,GAAG,CAAE,UAASP,IAAI,CAACI,EAAG,EAAC,EAAEJ,IAAI,CAAC;IACnC,OAAOZ,QAAQ,CAACc,IAAI;EACxB,CAAC,CAAC,OAAOL,KAAK,EAAE;IACZ,OAAOA,KAAK,CAACC,OAAO;EACxB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}