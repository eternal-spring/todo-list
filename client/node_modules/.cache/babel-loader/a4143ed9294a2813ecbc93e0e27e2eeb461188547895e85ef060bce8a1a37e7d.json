{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getTodos, postTodo, updateTodo, deleteTodo } from '../Services';\nexport default _s(url => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    const getAllTodos = async () => {\n      const response = await getTodos(url);\n      console.log(response);\n      setTodos(response);\n    };\n    getAllTodos();\n  }, []);\n  return {\n    todos,\n    addTodo: async description => {\n      await postTodo(url, {\n        description: description,\n        isDone: false\n      });\n      const newTodos = await getTodos(url);\n      setTodos(newTodos);\n    },\n    updateTodo: async todo => {\n      await updateTodo(url, todo);\n      const newTodos = await getTodos(url);\n      setTodos(newTodos);\n    },\n    deleteTodo: async id => {\n      await deleteTodo(url, id);\n      const newTodos = await getTodos(url);\n      setTodos(newTodos);\n    }\n  };\n}, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");","map":{"version":3,"names":["useState","useEffect","getTodos","postTodo","updateTodo","deleteTodo","_s","url","todos","setTodos","getAllTodos","response","console","log","addTodo","description","isDone","newTodos","todo","id"],"sources":["C:/Users/User/ReactProjects/todo-list/src/Hooks/useTodoState.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { getTodos, postTodo, updateTodo, deleteTodo } from '../Services';\r\n\r\nexport default (url) => {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getAllTodos = async () => {\r\n      const response = await getTodos(url);\r\n      console.log(response);\r\n      setTodos(response);\r\n    };\r\n    getAllTodos();\r\n  }, [])\r\n\r\n  return {\r\n    todos,\r\n\r\n    addTodo: async description => {\r\n      await postTodo(url, {description: description, isDone: false});\r\n      const newTodos = await getTodos(url);\r\n      setTodos(newTodos);    \r\n    },\r\n\r\n    updateTodo: async todo => {\r\n      await updateTodo(url, todo);\r\n      const newTodos = await getTodos(url);\r\n      setTodos(newTodos);\r\n    },\r\n    \r\n    deleteTodo: async id => {\r\n      await deleteTodo(url, id);\r\n      const newTodos = await getTodos(url);\r\n      setTodos(newTodos);\r\n    }\r\n  };\r\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,QAAQ,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,UAAU,QAAQ,aAAa;AAExE,eAAAC,EAAA,CAAgBC,GAAG,IAAK;EAAAD,EAAA;EACtB,MAAM,CAACE,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,QAAQ,GAAG,MAAMT,QAAQ,CAACK,GAAG,CAAC;MACpCK,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrBF,QAAQ,CAACE,QAAQ,CAAC;IACpB,CAAC;IACDD,WAAW,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLF,KAAK;IAELM,OAAO,EAAE,MAAMC,WAAW,IAAI;MAC5B,MAAMZ,QAAQ,CAACI,GAAG,EAAE;QAACQ,WAAW,EAAEA,WAAW;QAAEC,MAAM,EAAE;MAAK,CAAC,CAAC;MAC9D,MAAMC,QAAQ,GAAG,MAAMf,QAAQ,CAACK,GAAG,CAAC;MACpCE,QAAQ,CAACQ,QAAQ,CAAC;IACpB,CAAC;IAEDb,UAAU,EAAE,MAAMc,IAAI,IAAI;MACxB,MAAMd,UAAU,CAACG,GAAG,EAAEW,IAAI,CAAC;MAC3B,MAAMD,QAAQ,GAAG,MAAMf,QAAQ,CAACK,GAAG,CAAC;MACpCE,QAAQ,CAACQ,QAAQ,CAAC;IACpB,CAAC;IAEDZ,UAAU,EAAE,MAAMc,EAAE,IAAI;MACtB,MAAMd,UAAU,CAACE,GAAG,EAAEY,EAAE,CAAC;MACzB,MAAMF,QAAQ,GAAG,MAAMf,QAAQ,CAACK,GAAG,CAAC;MACpCE,QAAQ,CAACQ,QAAQ,CAAC;IACpB;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}