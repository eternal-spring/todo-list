{"ast":null,"code":"import axios from \"axios\";\n\n// Основная функция для получения всех задач.\n// Она принимает строку запроса и адрес сервера\nexport const getTodos = async () => {\n  try {\n    // Определяем наличие строки запроса\n    const response = await axios.get('db.json').then(res => res.status === 200 ? true : false).catch(err => false);\n    return response;\n  } catch (err) {\n    console.error(err.message || err);\n  }\n};\nexport async function postTodo(task) {\n  try {\n    const response = await axios.post(\"/tasks\", task);\n    return response.data;\n  } catch (error) {\n    return error.message;\n  }\n}\nexport async function deleteTodo(id) {\n  try {\n    const response = await axios.delete(`/tasks/${id}`);\n    return response.data;\n  } catch (error) {\n    return error.message;\n  }\n}\nexport async function updateTodo(task) {\n  try {\n    const response = await axios.put(`/tasks/${task.id}`, task);\n    return response.data;\n  } catch (error) {\n    return error.message;\n  }\n}","map":{"version":3,"names":["axios","getTodos","response","get","then","res","status","catch","err","console","error","message","postTodo","task","post","data","deleteTodo","id","delete","updateTodo","put"],"sources":["C:/Users/User/ReactProjects/todo-list/src/Services/index.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Основная функция для получения всех задач.\r\n// Она принимает строку запроса и адрес сервера\r\nexport const getTodos = async () => {\r\n  try {\r\n    // Определяем наличие строки запроса\r\n    const response = await axios.get('db.json').then(res =>  res.status === 200 ? true : false)\r\n    .catch(err => false);\r\n    return response\r\n  } catch (err) {\r\n    console.error(err.message || err)\r\n  }\r\n}\r\n\r\nexport async function postTodo(task) {\r\n  try {\r\n        const response = await axios\r\n            .post(\"/tasks\", task);\r\n        return response.data;\r\n    } catch (error) {\r\n        return error.message;\r\n    }\r\n}\r\n\r\nexport async function deleteTodo(id) {\r\n  try {\r\n        const response = await axios\r\n            .delete(`/tasks/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        return error.message;\r\n    }\r\n}\r\n\r\nexport async function updateTodo(task) {\r\n  try {\r\n        const response = await axios\r\n            .put(`/tasks/${task.id}`, task);\r\n        return response.data;\r\n    } catch (error) {\r\n        return error.message;\r\n    }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,SAAS,CAAC,CAACC,IAAI,CAACC,GAAG,IAAKA,GAAG,CAACC,MAAM,KAAK,GAAG,GAAG,IAAI,GAAG,KAAK,CAAC,CAC1FC,KAAK,CAACC,GAAG,IAAI,KAAK,CAAC;IACpB,OAAON,QAAQ;EACjB,CAAC,CAAC,OAAOM,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAACG,OAAO,IAAIH,GAAG,CAAC;EACnC;AACF,CAAC;AAED,OAAO,eAAeI,QAAQA,CAACC,IAAI,EAAE;EACnC,IAAI;IACE,MAAMX,QAAQ,GAAG,MAAMF,KAAK,CACvBc,IAAI,CAAC,QAAQ,EAAED,IAAI,CAAC;IACzB,OAAOX,QAAQ,CAACa,IAAI;EACxB,CAAC,CAAC,OAAOL,KAAK,EAAE;IACZ,OAAOA,KAAK,CAACC,OAAO;EACxB;AACJ;AAEA,OAAO,eAAeK,UAAUA,CAACC,EAAE,EAAE;EACnC,IAAI;IACE,MAAMf,QAAQ,GAAG,MAAMF,KAAK,CACvBkB,MAAM,CAAE,UAASD,EAAG,EAAC,CAAC;IAC3B,OAAOf,QAAQ,CAACa,IAAI;EACxB,CAAC,CAAC,OAAOL,KAAK,EAAE;IACZ,OAAOA,KAAK,CAACC,OAAO;EACxB;AACJ;AAEA,OAAO,eAAeQ,UAAUA,CAACN,IAAI,EAAE;EACrC,IAAI;IACE,MAAMX,QAAQ,GAAG,MAAMF,KAAK,CACvBoB,GAAG,CAAE,UAASP,IAAI,CAACI,EAAG,EAAC,EAAEJ,IAAI,CAAC;IACnC,OAAOX,QAAQ,CAACa,IAAI;EACxB,CAAC,CAAC,OAAOL,KAAK,EAAE;IACZ,OAAOA,KAAK,CAACC,OAAO;EACxB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}