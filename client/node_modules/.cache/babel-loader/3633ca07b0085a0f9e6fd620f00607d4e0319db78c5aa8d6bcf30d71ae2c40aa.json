{"ast":null,"code":"import axios from \"axios\";\nexport const getTodos = async url => {\n  try {\n    const response = await axios.get(url);\n    return response;\n  } catch (err) {\n    console.error(err.message || err);\n  }\n};\nexport async function postTodo(url, task) {\n  try {\n    const response = await axios.post(url.tasks, task, {\n      headers: {\n        // Overwrite Axios's automatically set Content-Type\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return error.message;\n  }\n}\nexport async function deleteTodo(url, id) {\n  try {\n    const response = await axios.delete(`/${url}/${id}`);\n    return response.data;\n  } catch (error) {\n    return error.message;\n  }\n}\nexport async function updateTodo(url, task) {\n  try {\n    const response = await axios.patch(`/${url}/${task.id}`, {\n      isDone: !task.isDone\n    });\n    return response.data;\n  } catch (error) {\n    return error.message;\n  }\n}","map":{"version":3,"names":["axios","getTodos","url","response","get","err","console","error","message","postTodo","task","post","tasks","headers","data","deleteTodo","id","delete","updateTodo","patch","isDone"],"sources":["C:/Users/User/ReactProjects/todo-list/src/Services/index.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const getTodos = async (url) => {\r\n  try {\r\n    const response = await axios.get(url);\r\n    return response\r\n  } catch (err) {\r\n    console.error(err.message || err)\r\n  }\r\n}\r\n\r\nexport async function postTodo(url, task) {\r\n  try {\r\n        const response = await axios\r\n            .post(url.tasks, task, {\r\n                headers: {\r\n                  // Overwrite Axios's automatically set Content-Type\r\n                  'Content-Type': 'application/json'\r\n                }\r\n              });\r\n        return response.data;\r\n    } catch (error) {\r\n        return error.message;\r\n    }\r\n}\r\n\r\nexport async function deleteTodo(url, id) {\r\n  try {\r\n        const response = await axios\r\n            .delete(`/${url}/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        return error.message;\r\n    }\r\n}\r\n\r\nexport async function updateTodo(url, task) {\r\n  try {\r\n        const response = await axios\r\n            .patch(`/${url}/${task.id}`, { isDone: !task.isDone });\r\n        return response.data;\r\n    } catch (error) {\r\n        return error.message;\r\n    }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,QAAQ,GAAG,MAAOC,GAAG,IAAK;EACrC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACF,GAAG,CAAC;IACrC,OAAOC,QAAQ;EACjB,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAACG,OAAO,IAAIH,GAAG,CAAC;EACnC;AACF,CAAC;AAED,OAAO,eAAeI,QAAQA,CAACP,GAAG,EAAEQ,IAAI,EAAE;EACxC,IAAI;IACE,MAAMP,QAAQ,GAAG,MAAMH,KAAK,CACvBW,IAAI,CAACT,GAAG,CAACU,KAAK,EAAEF,IAAI,EAAE;MACnBG,OAAO,EAAE;QACP;QACA,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACR,OAAOV,QAAQ,CAACW,IAAI;EACxB,CAAC,CAAC,OAAOP,KAAK,EAAE;IACZ,OAAOA,KAAK,CAACC,OAAO;EACxB;AACJ;AAEA,OAAO,eAAeO,UAAUA,CAACb,GAAG,EAAEc,EAAE,EAAE;EACxC,IAAI;IACE,MAAMb,QAAQ,GAAG,MAAMH,KAAK,CACvBiB,MAAM,CAAE,IAAGf,GAAI,IAAGc,EAAG,EAAC,CAAC;IAC5B,OAAOb,QAAQ,CAACW,IAAI;EACxB,CAAC,CAAC,OAAOP,KAAK,EAAE;IACZ,OAAOA,KAAK,CAACC,OAAO;EACxB;AACJ;AAEA,OAAO,eAAeU,UAAUA,CAAChB,GAAG,EAAEQ,IAAI,EAAE;EAC1C,IAAI;IACE,MAAMP,QAAQ,GAAG,MAAMH,KAAK,CACvBmB,KAAK,CAAE,IAAGjB,GAAI,IAAGQ,IAAI,CAACM,EAAG,EAAC,EAAE;MAAEI,MAAM,EAAE,CAACV,IAAI,CAACU;IAAO,CAAC,CAAC;IAC1D,OAAOjB,QAAQ,CAACW,IAAI;EACxB,CAAC,CAAC,OAAOP,KAAK,EAAE;IACZ,OAAOA,KAAK,CAACC,OAAO;EACxB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}